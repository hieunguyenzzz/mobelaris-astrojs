---
import { getProduct, getProducts, getRegions } from '../../utils/medusa';
import Header from '../../components/Header.astro';
import AddToCart from '../../components/AddToCart';

export async function getStaticPaths() {
    const regions = await getRegions();
    const { products } = await getProducts();

    return regions.flatMap((region: any) => {
        return products.flatMap((product: any) => {
            return product.variants.map((variant: any) => {
                const handle = variant.metadata?.handle;
                if (!handle) return null;
                
                return {
                    params: { 
                        region: region.currency_code.toLowerCase(),
                        handle 
                    },
                    props: { 
                        productId: product.id,
                        variantHandle: handle,
                        regionId: region.id
                    }
                };
            }).filter(Boolean);
        });
    });
}

const { handle } = Astro.params;
const { productId, variantHandle, regionId } = Astro.props;
const { product } = await getProduct(productId, regionId);
const selectedVariant = product.variants.find((v: any) => v.metadata?.handle === variantHandle);
const defaultImages = selectedVariant?.metadata?.images || [product.thumbnail];
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{product?.title} {selectedVariant?.title ? `- ${selectedVariant.title}` : ''}</title>
  </head>
  <body>
    <Header />
    <main class="container mx-auto px-4 py-8">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {/* Image Section */}
        <div class="relative">
          {defaultImages.map((image: string) => (
            <img 
              src={image}
              alt={product.title}
              class="w-full h-auto rounded-lg shadow-lg"
            />
          ))}
        </div>

        {/* Product Details Section */}
        <div class="space-y-6">
          <h1 class="text-3xl font-bold">
            {product.title}
            {selectedVariant?.title && (
              <span class="text-xl text-gray-600"> - {selectedVariant.title}</span>
            )}
          </h1>

          <p class="text-gray-600">{product.description}</p>

          <div class="text-2xl font-semibold">
            {selectedVariant?.prices?.[0]?.amount 
              ? `$${(selectedVariant.prices[0].amount / 100).toFixed(2)}` 
              : 'Price not available'}
          </div>

          <AddToCart 
            client:load 
            variants={product.variants}
            initialVariantHandle={variantHandle}
            productId={product.id} 
            variantId={selectedVariant?.id}
          />
        </div>
      </div>
    </main>
  </body>
</html> 